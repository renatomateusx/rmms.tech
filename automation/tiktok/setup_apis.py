#!/usr/bin/env python3
"""
Configurador R√°pido de APIs - RMMS Tech TikTok
Configura as APIs recomendadas de forma simples
"""

import os
import json
import sys
from video_generator import GeradorVideo

def configurar_apis_recomendadas():
    """Configura as APIs recomendadas (Pika Labs + Lumen5)"""
    print("üöÄ Configurador de APIs - RMMS Tech TikTok")
    print("=" * 50)
    
    gerador = GeradorVideo()
    
    print("\nüèÜ COMBINA√á√ÉO RECOMENDADA:")
    print("üìä Pika Labs + Runway ML")
    print("üí∞ Custo: ~$10.50 por v√≠deo")
    print("üéØ Estrat√©gia: Pika (mais barato) -> Runway (qualidade) -> Lumen5 (fallback)")
    print()
    
    # Configurar Pika Labs
    print("üîß CONFIGURANDO PIKA LABS")
    print("- Custo: $3.50 por v√≠deo (35s)")
    print("- Qualidade: Boa, r√°pida gera√ß√£o")
    print("- Ideal para: Casos de sucesso din√¢micos")
    print()
    
    pika_key = input("üìù Digite sua API Key do Pika Labs (ou Enter para pular): ").strip()
    
    if pika_key:
        if gerador.configurar_api("pika_labs", pika_key):
            print("‚úÖ Pika Labs configurado com sucesso!")
        else:
            print("‚ùå Erro ao configurar Pika Labs")
    else:
        print("‚è≠Ô∏è Pika Labs n√£o configurado")
    
    print()
    
    # Configurar Runway ML
    print("üîß CONFIGURANDO RUNWAY ML")
    print("- Custo: $7.00 por v√≠deo (35s)")
    print("- Qualidade: Alta qualidade, v√≠deos realistas")
    print("- Ideal para: Casos de sucesso com qualidade premium")
    print()
    
    runway_key = input("üìù Digite sua API Key do Runway ML (ou Enter para pular): ").strip()
    
    if runway_key:
        if gerador.configurar_api("runway", runway_key):
            print("‚úÖ Runway ML configurado com sucesso!")
        else:
            print("‚ùå Erro ao configurar Runway ML")
    else:
        print("‚è≠Ô∏è Runway ML n√£o configurado")
    
    print()
    
    # Configurar Lumen5 (opcional)
    print("üîß CONFIGURANDO LUMEN5 (OPCIONAL)")
    print("- Custo: $19 por v√≠deo")
    print("- Qualidade: V√≠deo com texto e imagens")
    print("- Ideal para: Fallback se outras falharem")
    print()
    
    lumen5_key = input("üìù Digite sua API Key do Lumen5 (ou Enter para pular): ").strip()
    
    if lumen5_key:
        if gerador.configurar_api("lumen5", lumen5_key):
            print("‚úÖ Lumen5 configurado com sucesso!")
        else:
            print("‚ùå Erro ao configurar Lumen5")
    else:
        print("‚è≠Ô∏è Lumen5 n√£o configurado")
    
    print()
    
    # Mostrar status final
    print("üìä STATUS FINAL:")
    gerador.listar_apis_disponiveis()
    
    print("\nüéØ PR√ìXIMOS PASSOS:")
    print("1. Teste o sistema: python3 main.py --gerar")
    print("2. Verifique os v√≠deos gerados")
    print("3. Ajuste configura√ß√µes se necess√°rio")
    
    # Verificar se pelo menos uma API est√° configurada
    config_path = 'config/api_config.json'
    if os.path.exists(config_path):
        with open(config_path, 'r') as f:
            config = json.load(f)
        
        apis_ativas = sum(1 for api in config["apis"].values() if api["enabled"])
        
        if apis_ativas > 0:
            print(f"\n‚úÖ {apis_ativas} API(s) configurada(s)! Sistema pronto para gera√ß√£o autom√°tica.")
        else:
            print("\n‚ö†Ô∏è Nenhuma API configurada. O sistema funcionar√° apenas com prompts manuais.")

def configurar_api_individual():
    """Configura uma API espec√≠fica"""
    print("üîß Configura√ß√£o Individual de API")
    print("=" * 40)
    
    gerador = GeradorVideo()
    
    print("\nüìã APIs dispon√≠veis:")
    print("1. pika_labs - Pika Labs ($3.50/v√≠deo)")
    print("2. lumen5 - Lumen5 ($19/v√≠deo)")
    print("3. runway - Runway ML ($7/v√≠deo)")
    print("4. synthesia - Synthesia ($22/v√≠deo)")
    print()
    
    api_name = input("üìù Digite o nome da API: ").strip()
    api_key = input("üìù Digite a API Key: ").strip()
    
    if api_name and api_key:
        if gerador.configurar_api(api_name, api_key):
            print(f"‚úÖ API {api_name} configurada com sucesso!")
        else:
            print(f"‚ùå Erro ao configurar API {api_name}")
    else:
        print("‚ùå Nome da API e API Key s√£o obrigat√≥rios")

def mostrar_ajuda():
    """Mostra ajuda do sistema"""
    print("""
üé¨ Sistema de V√≠deos TikTok - RMMS Tech

üìã Comandos dispon√≠veis:
  python3 setup_apis.py                    - Configura√ß√£o recomendada (Pika + Lumen5)
  python3 setup_apis.py --individual       - Configura√ß√£o individual de API
  python3 setup_apis.py --ajuda            - Mostra esta ajuda

üèÜ COMBINA√á√ÉO RECOMENDADA:
  üìä Pika Labs + Runway ML
  üí∞ Custo: ~$10.50 por v√≠deo
  üéØ Estrat√©gia: Pika (mais barato) -> Runway (qualidade) -> Lumen5 (fallback)

üîß APIs suportadas:
  - pika_labs: $3.50/v√≠deo (text-to-video)
  - lumen5: $19/v√≠deo (texto + imagens)
  - runway: $7/v√≠deo (alta qualidade)
  - synthesia: $22/v√≠deo (avatar)

üìà Workflow:
  1. Configure as APIs
  2. Execute: python3 main.py --gerar
  3. Revise os v√≠deos gerados
  4. Publique no TikTok
    """)

def main():
    """Fun√ß√£o principal"""
    if len(sys.argv) > 1:
        comando = sys.argv[1]
        
        if comando == "--individual":
            configurar_api_individual()
        elif comando == "--ajuda":
            mostrar_ajuda()
        else:
            print(f"‚ùå Comando desconhecido: {comando}")
            mostrar_ajuda()
    else:
        # Configura√ß√£o recomendada (padr√£o)
        configurar_apis_recomendadas()

if __name__ == "__main__":
    main() 